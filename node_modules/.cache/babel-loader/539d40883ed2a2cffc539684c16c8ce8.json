{"ast":null,"code":"var _jsxFileName = \"/home/m6d/Documents/react-hooks/src/components/Body/DisplayData/DisplayData.js\";\nimport React, { Fragment } from \"react\";\nimport isEmpty from \"lodash/isEmpty\";\nimport PropTypes from \"prop-types\";\nimport { FaHeartBroken } from \"react-icons/fa\";\n\nvar DisplayData = function DisplayData(_ref) {\n  var className = _ref.className,\n      error = _ref.error,\n      photos = _ref.photos;\n  return React.createElement(\"div\", {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, error || isEmpty(photos) ? React.createElement(\"div\", {\n    className: \"error-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(FaHeartBroken, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), \" Uh oh, something went wrong.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, error)) : photos.map(function (_ref2) {\n    var albumId = _ref2.albumId,\n        id = _ref2.id,\n        title = _ref2.title,\n        url = _ref2.url,\n        thumbnailUrl = _ref2.thumbnailUrl;\n    return React.createElement(Fragment, {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"image\",\n      src: thumbnailUrl,\n      alt: \"example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"album\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"ALBUM ID: \", albumId), React.createElement(\"p\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"TITLE:\"), \" \", title), React.createElement(\"p\", {\n      className: \"url\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"URL: \"), React.createElement(\"a\", {\n      href: url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, url)));\n  }));\n};\n\nDisplayData.propTypes = {\n  className: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  photos: PropTypes.arrayOf(PropTypes.shape({\n    albumId: PropTypes.number,\n    id: PropTypes.numer,\n    title: PropTypes.string,\n    url: PropTypes.string,\n    thumbnailUrl: PropTypes.string\n  }))\n};\nexport default DisplayData;","map":{"version":3,"sources":["/home/m6d/Documents/react-hooks/src/components/Body/DisplayData/DisplayData.js"],"names":["React","Fragment","isEmpty","PropTypes","FaHeartBroken","DisplayData","className","error","photos","map","albumId","id","title","url","thumbnailUrl","propTypes","string","isRequired","arrayOf","shape","number","numer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,gBAA9B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcC,KAAd,QAAcA,KAAd;AAAA,MAAqBC,MAArB,QAAqBA,MAArB;AAAA,SAClB;AAAK,IAAA,SAAS,EAAEF,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,IAAIL,OAAO,CAACM,MAAD,CAAhB,GACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,kCADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAJ,CAJF,CADD,GAQCC,MAAM,CAACC,GAAP,CAAW;AAAA,QAAGC,OAAH,SAAGA,OAAH;AAAA,QAAYC,EAAZ,SAAYA,EAAZ;AAAA,QAAgBC,KAAhB,SAAgBA,KAAhB;AAAA,QAAuBC,GAAvB,SAAuBA,GAAvB;AAAA,QAA4BC,YAA5B,SAA4BA,YAA5B;AAAA,WACT,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEH,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAEG,YAA5B;AAA0C,MAAA,GAAG,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiCJ,OAAjC,CAFF,EAGE;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OAC2BE,KAD3B,CAHF,EAME;AAAG,MAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAG,MAAA,IAAI,EAAEC,GAAT;AAAc,MAAA,MAAM,EAAC,QAArB;AAA8B,MAAA,GAAG,EAAC,qBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,GADH,CAFF,CANF,CADS;AAAA,GAAX,CATJ,CADkB;AAAA,CAApB;;AA6BAR,WAAW,CAACU,SAAZ,GAAwB;AACtBT,EAAAA,SAAS,EAAEH,SAAS,CAACa,MAAV,CAAiBC,UADN;AAEtBV,EAAAA,KAAK,EAAEJ,SAAS,CAACa,MAFK;AAGtBR,EAAAA,MAAM,EAAEL,SAAS,CAACe,OAAV,CACNf,SAAS,CAACgB,KAAV,CAAgB;AACdT,IAAAA,OAAO,EAAEP,SAAS,CAACiB,MADL;AAEdT,IAAAA,EAAE,EAAER,SAAS,CAACkB,KAFA;AAGdT,IAAAA,KAAK,EAAET,SAAS,CAACa,MAHH;AAIdH,IAAAA,GAAG,EAAEV,SAAS,CAACa,MAJD;AAKdF,IAAAA,YAAY,EAAEX,SAAS,CAACa;AALV,GAAhB,CADM;AAHc,CAAxB;AAcA,eAAeX,WAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport isEmpty from \"lodash/isEmpty\";\nimport PropTypes from \"prop-types\";\nimport { FaHeartBroken } from \"react-icons/fa\";\n\nconst DisplayData = ({ className, error, photos }) => (\n  <div className={className}>\n    {error || isEmpty(photos) ? (\n      <div className=\"error-container\">\n        <h3>\n          <FaHeartBroken /> Uh oh, something went wrong.\n        </h3>\n        <p>{error}</p>\n      </div>\n    ) : (\n      photos.map(({ albumId, id, title, url, thumbnailUrl }) => (\n        <Fragment key={id}>\n          <img className=\"image\" src={thumbnailUrl} alt=\"example\" />\n          <h3 className=\"album\">ALBUM ID: {albumId}</h3>\n          <p className=\"title\">\n            <strong>TITLE:</strong> {title}\n          </p>\n          <p className=\"url\">\n            <strong>URL: </strong>\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {url}\n            </a>\n          </p>\n        </Fragment>\n      ))\n    )}\n  </div>\n);\n\nDisplayData.propTypes = {\n  className: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  photos: PropTypes.arrayOf(\n    PropTypes.shape({\n      albumId: PropTypes.number,\n      id: PropTypes.numer,\n      title: PropTypes.string,\n      url: PropTypes.string,\n      thumbnailUrl: PropTypes.string\n    })\n  )\n};\n\nexport default DisplayData;\n"]},"metadata":{},"sourceType":"module"}