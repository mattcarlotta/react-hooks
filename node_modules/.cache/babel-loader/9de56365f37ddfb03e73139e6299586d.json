{"ast":null,"code":"import _objectSpread from \"/home/m6d/Documents/react-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/m6d/Documents/react-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/m6d/Documents/react-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createRandomString } from \"../../../utils/helpers\";\n\nvar useDynamicFieldHandler = function useDynamicFieldHandler(initialState) {\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      updateFields = _useState2[1];\n\n  var addField = useCallback(function () {\n    updateFields(function (prevState) {\n      return {\n        fields: [].concat(_toConsumableArray(prevState.fields), [{\n          name: \"Field_\".concat(createRandomString()),\n          position: prevState.fieldsCount + 1,\n          value: \"\"\n        }]),\n        fieldsCount: prevState.fieldsCount + 1\n      };\n    });\n  }, []);\n  var deleteField = useCallback(function (name) {\n    updateFields(function (prevState) {\n      return {\n        fields: prevState.fields.filter(function (field) {\n          return field.name !== name;\n        }).map(function (field, key) {\n          return _objectSpread({}, field, {\n            position: key + 1\n          });\n        }),\n        fieldsCount: prevState.fieldsCount - 1\n      };\n    });\n  }, []);\n  var handleChange = useCallback(function (_ref) {\n    var _ref$target = _ref.target,\n        name = _ref$target.name,\n        value = _ref$target.value;\n    updateFields(function (prevState) {\n      return _objectSpread({}, prevState, {\n        fields: prevState.fields.map(function (field, key) {\n          return field.name === name ? _objectSpread({}, field, {\n            value: value\n          }) : field;\n        })\n      });\n    });\n  }, []);\n  return {\n    addField: addField,\n    deleteField: deleteField,\n    values: values,\n    handleChange: handleChange\n  };\n};\n\nuseDynamicFieldHandler.propTypes = {\n  initialState: PropTypes.arrayOf(PropTypes.shape({\n    fields: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      position: PropTypes.number.isRequired,\n      value: PropTypes.string.isRequired\n    }),\n    fieldsCount: PropTypes.number.isRequired\n  })).isRequired\n};\nexport default useDynamicFieldHandler;","map":{"version":3,"sources":["/home/m6d/Documents/react-hooks/src/components/Hooks/useDynamicFieldHandler/index.js"],"names":["useCallback","useState","PropTypes","createRandomString","useDynamicFieldHandler","initialState","values","updateFields","addField","prevState","fields","name","position","fieldsCount","value","deleteField","filter","field","map","key","handleChange","target","propTypes","arrayOf","shape","string","isRequired","number"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,wBAAnC;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,YAAY,EAAI;AAAA,kBACdJ,QAAQ,CAACI,YAAD,CADM;AAAA;AAAA,MACtCC,MADsC;AAAA,MAC9BC,YAD8B;;AAG7C,MAAMC,QAAQ,GAAGR,WAAW,CAAC,YAAM;AACjCO,IAAAA,YAAY,CAAC,UAAAE,SAAS;AAAA,aAAK;AACzBC,QAAAA,MAAM,+BACDD,SAAS,CAACC,MADT,IAEJ;AACEC,UAAAA,IAAI,kBAAWR,kBAAkB,EAA7B,CADN;AAEES,UAAAA,QAAQ,EAAEH,SAAS,CAACI,WAAV,GAAwB,CAFpC;AAGEC,UAAAA,KAAK,EAAE;AAHT,SAFI,EADmB;AASzBD,QAAAA,WAAW,EAAEJ,SAAS,CAACI,WAAV,GAAwB;AATZ,OAAL;AAAA,KAAV,CAAZ;AAWD,GAZ2B,EAYzB,EAZyB,CAA5B;AAcA,MAAME,WAAW,GAAGf,WAAW,CAAC,UAAAW,IAAI,EAAI;AACtCJ,IAAAA,YAAY,CAAC,UAAAE,SAAS;AAAA,aAAK;AACzBC,QAAAA,MAAM,EAAED,SAAS,CAACC,MAAV,CACLM,MADK,CACE,UAAAC,KAAK;AAAA,iBAAIA,KAAK,CAACN,IAAN,KAAeA,IAAnB;AAAA,SADP,EAELO,GAFK,CAED,UAACD,KAAD,EAAQE,GAAR;AAAA,mCAAsBF,KAAtB;AAA6BL,YAAAA,QAAQ,EAAEO,GAAG,GAAG;AAA7C;AAAA,SAFC,CADiB;AAIzBN,QAAAA,WAAW,EAAEJ,SAAS,CAACI,WAAV,GAAwB;AAJZ,OAAL;AAAA,KAAV,CAAZ;AAMD,GAP8B,EAO5B,EAP4B,CAA/B;AASA,MAAMO,YAAY,GAAGpB,WAAW,CAAC,gBAAiC;AAAA,2BAA9BqB,MAA8B;AAAA,QAApBV,IAAoB,eAApBA,IAAoB;AAAA,QAAdG,KAAc,eAAdA,KAAc;AAChEP,IAAAA,YAAY,CAAC,UAAAE,SAAS;AAAA,+BACjBA,SADiB;AAEpBC,QAAAA,MAAM,EAAED,SAAS,CAACC,MAAV,CAAiBQ,GAAjB,CAAqB,UAACD,KAAD,EAAQE,GAAR;AAAA,iBAC3BF,KAAK,CAACN,IAAN,KAAeA,IAAf,qBAA2BM,KAA3B;AAAkCH,YAAAA,KAAK,EAALA;AAAlC,eAA4CG,KADjB;AAAA,SAArB;AAFY;AAAA,KAAV,CAAZ;AAMD,GAP+B,EAO7B,EAP6B,CAAhC;AASA,SAAO;AACLT,IAAAA,QAAQ,EAARA,QADK;AAELO,IAAAA,WAAW,EAAXA,WAFK;AAGLT,IAAAA,MAAM,EAANA,MAHK;AAILc,IAAAA,YAAY,EAAZA;AAJK,GAAP;AAMD,CAzCD;;AA2CAhB,sBAAsB,CAACkB,SAAvB,GAAmC;AACjCjB,EAAAA,YAAY,EAAEH,SAAS,CAACqB,OAAV,CACZrB,SAAS,CAACsB,KAAV,CAAgB;AACdd,IAAAA,MAAM,EAAER,SAAS,CAACsB,KAAV,CAAgB;AACtBb,MAAAA,IAAI,EAAET,SAAS,CAACuB,MAAV,CAAiBC,UADD;AAEtBd,MAAAA,QAAQ,EAAEV,SAAS,CAACyB,MAAV,CAAiBD,UAFL;AAGtBZ,MAAAA,KAAK,EAAEZ,SAAS,CAACuB,MAAV,CAAiBC;AAHF,KAAhB,CADM;AAMdb,IAAAA,WAAW,EAAEX,SAAS,CAACyB,MAAV,CAAiBD;AANhB,GAAhB,CADY,EASZA;AAV+B,CAAnC;AAaA,eAAetB,sBAAf","sourcesContent":["import { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createRandomString } from \"../../../utils/helpers\";\n\nconst useDynamicFieldHandler = initialState => {\n  const [values, updateFields] = useState(initialState);\n\n  const addField = useCallback(() => {\n    updateFields(prevState => ({\n      fields: [\n        ...prevState.fields,\n        {\n          name: `Field_${createRandomString()}`,\n          position: prevState.fieldsCount + 1,\n          value: \"\"\n        }\n      ],\n      fieldsCount: prevState.fieldsCount + 1\n    }));\n  }, []);\n\n  const deleteField = useCallback(name => {\n    updateFields(prevState => ({\n      fields: prevState.fields\n        .filter(field => field.name !== name)\n        .map((field, key) => ({ ...field, position: key + 1 })),\n      fieldsCount: prevState.fieldsCount - 1\n    }));\n  }, []);\n\n  const handleChange = useCallback(({ target: { name, value } }) => {\n    updateFields(prevState => ({\n      ...prevState,\n      fields: prevState.fields.map((field, key) =>\n        field.name === name ? { ...field, value } : field\n      )\n    }));\n  }, []);\n\n  return {\n    addField,\n    deleteField,\n    values,\n    handleChange\n  };\n};\n\nuseDynamicFieldHandler.propTypes = {\n  initialState: PropTypes.arrayOf(\n    PropTypes.shape({\n      fields: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        position: PropTypes.number.isRequired,\n        value: PropTypes.string.isRequired\n      }),\n      fieldsCount: PropTypes.number.isRequired\n    })\n  ).isRequired\n};\n\nexport default useDynamicFieldHandler;\n"]},"metadata":{},"sourceType":"module"}