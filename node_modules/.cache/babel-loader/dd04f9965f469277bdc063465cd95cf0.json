{"ast":null,"code":"import _objectWithoutProperties from \"/home/m6d/Documents/react-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/m6d/Documents/react-hooks/src/components/Body/Select/index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ClickHandler from \"./ClickHandler\";\nimport Selection from \"./Selection\";\nimport SelectBox from \"./SelectBox\";\nimport SelectContainer from \"./SelectContainer\";\nimport Options from \"./Options\";\n\nvar Select = function Select(_ref) {\n  var name = _ref.name,\n      selectOptions = _ref.selectOptions,\n      value = _ref.value,\n      props = _objectWithoutProperties(_ref, [\"name\", \"selectOptions\", \"value\"]);\n\n  return React.createElement(ClickHandler, Object.assign({\n    selectOptions: selectOptions\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), function (handlers) {\n    return React.createElement(SelectContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(SelectBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Selection, Object.assign({}, handlers, props, {\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    })), React.createElement(Options, Object.assign({}, handlers, {\n      name: name,\n      selectOptions: selectOptions,\n      selected: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }))));\n  });\n};\n\nSelect.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  selectOptions: PropTypes.arrayOf(PropTypes.string.isRequired),\n  value: PropTypes.string\n};\nexport default Select;","map":{"version":3,"sources":["/home/m6d/Documents/react-hooks/src/components/Body/Select/index.js"],"names":["React","PropTypes","ClickHandler","Selection","SelectBox","SelectContainer","Options","Select","name","selectOptions","value","props","handlers","propTypes","string","isRequired","placeholder","arrayOf"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,aAAT,QAASA,aAAT;AAAA,MAAwBC,KAAxB,QAAwBA,KAAxB;AAAA,MAAkCC,KAAlC;;AAAA,SACb,oBAAC,YAAD;AAAc,IAAA,aAAa,EAAEF;AAA7B,KAAgDE,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACG,UAAAC,QAAQ;AAAA,WACP,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD,oBAAeA,QAAf,EAA6BD,KAA7B;AAAoC,MAAA,KAAK,EAAED,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAEE,oBAAC,OAAD,oBACME,QADN;AAEE,MAAA,IAAI,EAAEJ,IAFR;AAGE,MAAA,aAAa,EAAEC,aAHjB;AAIE,MAAA,QAAQ,EAAEC,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CADF,CADO;AAAA,GADX,CADa;AAAA,CAAf;;AAkBAH,MAAM,CAACM,SAAP,GAAmB;AACjBL,EAAAA,IAAI,EAAEP,SAAS,CAACa,MAAV,CAAiBC,UADN;AAEjBC,EAAAA,WAAW,EAAEf,SAAS,CAACa,MAFN;AAGjBL,EAAAA,aAAa,EAAER,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACa,MAAV,CAAiBC,UAAnC,CAHE;AAIjBL,EAAAA,KAAK,EAAET,SAAS,CAACa;AAJA,CAAnB;AAOA,eAAeP,MAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ClickHandler from \"./ClickHandler\";\nimport Selection from \"./Selection\";\nimport SelectBox from \"./SelectBox\";\nimport SelectContainer from \"./SelectContainer\";\nimport Options from \"./Options\";\n\nconst Select = ({ name, selectOptions, value, ...props }) => (\n  <ClickHandler selectOptions={selectOptions} {...props}>\n    {handlers => (\n      <SelectContainer>\n        <SelectBox>\n          <Selection {...handlers} {...props} value={value} />\n          <Options\n            {...handlers}\n            name={name}\n            selectOptions={selectOptions}\n            selected={value}\n          />\n        </SelectBox>\n      </SelectContainer>\n    )}\n  </ClickHandler>\n);\n\nSelect.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  selectOptions: PropTypes.arrayOf(PropTypes.string.isRequired),\n  value: PropTypes.string\n};\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}