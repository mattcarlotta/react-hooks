{"ast":null,"code":"import _slicedToArray from \"/home/m6d/Documents/react-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar useLocalStorage = function useLocalStorage(key, initialValue) {\n  var _useState = useState(function () {\n    try {\n      var item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (e) {\n      return initialValue;\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      storedValue = _useState2[0],\n      setStoredValue = _useState2[1];\n\n  var setValue = useCallback(function (value) {\n    try {\n      window.localStorage.setItem(key, JSON.stringify(value));\n      setStoredValue(value);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [key]);\n  return [storedValue, setValue];\n};\n\nuseLocalStorage.propTypes = {\n  key: PropTypes.string.isRequired,\n  initialValue: PropTypes.any.isRequired\n};\nexport default useLocalStorage;","map":{"version":3,"sources":["/home/m6d/Documents/react-hooks/src/components/Hooks/useLocalStorage/index.js"],"names":["useState","useCallback","PropTypes","useLocalStorage","key","initialValue","item","window","localStorage","getItem","JSON","parse","e","storedValue","setStoredValue","setValue","value","setItem","stringify","console","log","propTypes","string","isRequired","any"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,YAAN,EAAuB;AAAA,kBACPL,QAAQ,CAAC,YAAM;AACnD,QAAI;AACF,UAAMM,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BL,GAA5B,CAAb;AACA,aAAOE,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAH,GAAsBD,YAAjC;AACD,KAHD,CAGE,OAAOO,CAAP,EAAU;AACV,aAAOP,YAAP;AACD;AACF,GAP6C,CADD;AAAA;AAAA,MACtCQ,WADsC;AAAA,MACzBC,cADyB;;AAU7C,MAAMC,QAAQ,GAAGd,WAAW,CAC1B,UAAAe,KAAK,EAAI;AACP,QAAI;AACFT,MAAAA,MAAM,CAACC,YAAP,CAAoBS,OAApB,CAA4Bb,GAA5B,EAAiCM,IAAI,CAACQ,SAAL,CAAeF,KAAf,CAAjC;AACAF,MAAAA,cAAc,CAACE,KAAD,CAAd;AACD,KAHD,CAGE,OAAOJ,CAAP,EAAU;AACVO,MAAAA,OAAO,CAACC,GAAR,CAAYR,CAAZ;AACD;AACF,GARyB,EAS1B,CAACR,GAAD,CAT0B,CAA5B;AAYA,SAAO,CAACS,WAAD,EAAcE,QAAd,CAAP;AACD,CAvBD;;AAyBAZ,eAAe,CAACkB,SAAhB,GAA4B;AAC1BjB,EAAAA,GAAG,EAAEF,SAAS,CAACoB,MAAV,CAAiBC,UADI;AAE1BlB,EAAAA,YAAY,EAAEH,SAAS,CAACsB,GAAV,CAAcD;AAFF,CAA5B;AAKA,eAAepB,eAAf","sourcesContent":["import { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst useLocalStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (e) {\n      return initialValue;\n    }\n  });\n\n  const setValue = useCallback(\n    value => {\n      try {\n        window.localStorage.setItem(key, JSON.stringify(value));\n        setStoredValue(value);\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    [key]\n  );\n\n  return [storedValue, setValue];\n};\n\nuseLocalStorage.propTypes = {\n  key: PropTypes.string.isRequired,\n  initialValue: PropTypes.any.isRequired\n};\n\nexport default useLocalStorage;\n"]},"metadata":{},"sourceType":"module"}