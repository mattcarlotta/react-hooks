{"ast":null,"code":"var _jsxFileName = \"/home/m6d/Documents/react-hooks/src/components/Body/DragNDrop/index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Container from \"./Container\";\nimport DroppableContainer from \"./DroppableContainer\";\nimport { Column, Row } from \"../\";\n\nvar DraggableContainer = function DraggableContainer(_ref) {\n  var tasks = _ref.tasks,\n      columns = _ref.columns,\n      handleChange = _ref.handleChange;\n  return React.createElement(DragDropContext, {\n    onDragEnd: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Row, {\n    style: {\n      margin: \"0 auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, Object.values(columns).map(function (_ref2) {\n    var id = _ref2.id,\n        title = _ref2.title,\n        taskIds = _ref2.taskIds;\n    return React.createElement(Column, {\n      width: \"\".concat(100 / Object.keys(columns).length, \"%\"),\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(DroppableContainer, {\n      droppableId: id,\n      title: title,\n      data: taskIds.map(function (id) {\n        return tasks[id];\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }));\n  }))));\n};\n\nDraggableContainer.propTypes = {\n  tasks: PropTypes.objectOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired\n  })),\n  columns: PropTypes.objectOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    taskIds: PropTypes.arrayOf(PropTypes.string)\n  }))\n};\nexport default DraggableContainer;","map":{"version":3,"sources":["/home/m6d/Documents/react-hooks/src/components/Body/DragNDrop/index.js"],"names":["React","PropTypes","DragDropContext","Container","DroppableContainer","Column","Row","DraggableContainer","tasks","columns","handleChange","margin","Object","values","map","id","title","taskIds","keys","length","propTypes","objectOf","shape","string","isRequired","description","arrayOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,KAA5B;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,OAAV,QAAUA,OAAV;AAAA,MAAmBC,YAAnB,QAAmBA,YAAnB;AAAA,SACzB,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAEA,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,MAAP,CAAcJ,OAAd,EAAuBK,GAAvB,CAA2B;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,KAAP,SAAOA,KAAP;AAAA,QAAcC,OAAd,SAAcA,OAAd;AAAA,WAC1B,oBAAC,MAAD;AAAQ,MAAA,KAAK,YAAK,MAAML,MAAM,CAACM,IAAP,CAAYT,OAAZ,EAAqBU,MAAhC,MAAb;AAAwD,MAAA,GAAG,EAAEJ,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,kBAAD;AACE,MAAA,WAAW,EAAEA,EADf;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,IAAI,EAAEC,OAAO,CAACH,GAAR,CAAY,UAAAC,EAAE;AAAA,eAAIP,KAAK,CAACO,EAAD,CAAT;AAAA,OAAd,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAD0B;AAAA,GAA3B,CADH,CADF,CADF,CADyB;AAAA,CAA3B;;AAkBAR,kBAAkB,CAACa,SAAnB,GAA+B;AAC7BZ,EAAAA,KAAK,EAAEP,SAAS,CAACoB,QAAV,CACLpB,SAAS,CAACqB,KAAV,CAAgB;AACdP,IAAAA,EAAE,EAAEd,SAAS,CAACsB,MAAV,CAAiBC,UADP;AAEdC,IAAAA,WAAW,EAAExB,SAAS,CAACsB,MAAV,CAAiBC;AAFhB,GAAhB,CADK,CADsB;AAO7Bf,EAAAA,OAAO,EAAER,SAAS,CAACoB,QAAV,CACPpB,SAAS,CAACqB,KAAV,CAAgB;AACdP,IAAAA,EAAE,EAAEd,SAAS,CAACsB,MAAV,CAAiBC,UADP;AAEdR,IAAAA,KAAK,EAAEf,SAAS,CAACsB,MAAV,CAAiBC,UAFV;AAGdP,IAAAA,OAAO,EAAEhB,SAAS,CAACyB,OAAV,CAAkBzB,SAAS,CAACsB,MAA5B;AAHK,GAAhB,CADO;AAPoB,CAA/B;AAgBA,eAAehB,kBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Container from \"./Container\";\nimport DroppableContainer from \"./DroppableContainer\";\nimport { Column, Row } from \"../\";\n\nconst DraggableContainer = ({ tasks, columns, handleChange }) => (\n  <DragDropContext onDragEnd={handleChange}>\n    <Container>\n      <Row style={{ margin: \"0 auto\" }}>\n        {Object.values(columns).map(({ id, title, taskIds }) => (\n          <Column width={`${100 / Object.keys(columns).length}%`} key={id}>\n            <DroppableContainer\n              droppableId={id}\n              title={title}\n              data={taskIds.map(id => tasks[id])}\n            />\n          </Column>\n        ))}\n      </Row>\n    </Container>\n  </DragDropContext>\n);\n\nDraggableContainer.propTypes = {\n  tasks: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired\n    })\n  ),\n  columns: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      taskIds: PropTypes.arrayOf(PropTypes.string)\n    })\n  )\n};\n\nexport default DraggableContainer;\n"]},"metadata":{},"sourceType":"module"}