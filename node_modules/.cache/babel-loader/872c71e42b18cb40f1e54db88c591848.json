{"ast":null,"code":"import _defineProperty from \"/home/m6d/Documents/react-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/m6d/Documents/react-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar useFileHandler = function useFileHandler(initialState) {\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var handleChange = useCallback(function (_ref) {\n    var _ref$target = _ref.target,\n        name = _ref$target.name,\n        files = _ref$target.files;\n    var newImageFile = {\n      file: files[0],\n      name: files[0].name,\n      preview: URL.createObjectURL(files[0]),\n      size: files[0].size\n    };\n    setValues(_defineProperty({}, name, [newImageFile]));\n  }, []);\n  var resetValues = useCallback(function () {\n    return setValues(initialState);\n  }, [initialState]);\n  return {\n    values: values,\n    handleChange: handleChange,\n    resetValues: resetValues\n  };\n};\n\nuseFileHandler.propTypes = {\n  initialState: PropTypes.objectOf(PropTypes.string)\n};\nexport default useFileHandler;","map":{"version":3,"sources":["/home/m6d/Documents/react-hooks/src/components/Hooks/useFileHandler/index.js"],"names":["useState","useCallback","PropTypes","useFileHandler","initialState","values","setValues","handleChange","target","name","files","newImageFile","file","preview","URL","createObjectURL","size","resetValues","propTypes","objectOf","string"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,YAAY,EAAI;AAAA,kBACTJ,QAAQ,CAACI,YAAD,CADC;AAAA;AAAA,MAC9BC,MAD8B;AAAA,MACtBC,SADsB;;AAErC,MAAMC,YAAY,GAAGN,WAAW,CAAC,gBAAiC;AAAA,2BAA9BO,MAA8B;AAAA,QAApBC,IAAoB,eAApBA,IAAoB;AAAA,QAAdC,KAAc,eAAdA,KAAc;AAChE,QAAMC,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAEF,KAAK,CAAC,CAAD,CADQ;AAEnBD,MAAAA,IAAI,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASD,IAFI;AAGnBI,MAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBL,KAAK,CAAC,CAAD,CAAzB,CAHU;AAInBM,MAAAA,IAAI,EAAEN,KAAK,CAAC,CAAD,CAAL,CAASM;AAJI,KAArB;AAOAV,IAAAA,SAAS,qBAAIG,IAAJ,EAAW,CAACE,YAAD,CAAX,EAAT;AACD,GAT+B,EAS7B,EAT6B,CAAhC;AAUA,MAAMM,WAAW,GAAGhB,WAAW,CAAC;AAAA,WAAMK,SAAS,CAACF,YAAD,CAAf;AAAA,GAAD,EAAgC,CAC7DA,YAD6D,CAAhC,CAA/B;AAIA,SAAO;AACLC,IAAAA,MAAM,EAANA,MADK;AAELE,IAAAA,YAAY,EAAZA,YAFK;AAGLU,IAAAA,WAAW,EAAXA;AAHK,GAAP;AAKD,CArBD;;AAuBAd,cAAc,CAACe,SAAf,GAA2B;AACzBd,EAAAA,YAAY,EAAEF,SAAS,CAACiB,QAAV,CAAmBjB,SAAS,CAACkB,MAA7B;AADW,CAA3B;AAIA,eAAejB,cAAf","sourcesContent":["import { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst useFileHandler = initialState => {\n  const [values, setValues] = useState(initialState);\n  const handleChange = useCallback(({ target: { name, files } }) => {\n    const newImageFile = {\n      file: files[0],\n      name: files[0].name,\n      preview: URL.createObjectURL(files[0]),\n      size: files[0].size\n    };\n\n    setValues({ [name]: [newImageFile] });\n  }, []);\n  const resetValues = useCallback(() => setValues(initialState), [\n    initialState\n  ]);\n\n  return {\n    values,\n    handleChange,\n    resetValues\n  };\n};\n\nuseFileHandler.propTypes = {\n  initialState: PropTypes.objectOf(PropTypes.string)\n};\n\nexport default useFileHandler;\n"]},"metadata":{},"sourceType":"module"}