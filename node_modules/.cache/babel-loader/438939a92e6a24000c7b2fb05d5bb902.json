{"ast":null,"code":"export default \"import React, { useCallback, useEffect } from \\\"react\\\";\\n\\n// utilize useEffect with an event listener that calls a useCallback function.\\nconst KeyListener = () => {\\n  const handleKeyDown = useCallback(({ keyCode }) => {\\n    if (keyCode === 13) alert(\\\"You pressed the enter key.\\\");\\n  }, []);\\n\\n  useEffect(() => {\\n    document.addEventListener(\\\"keydown\\\", handleKeyDown);\\n\\n    return () => {\\n      document.removeEventListener(\\\"keydown\\\", handleKeyDown);\\n    };\\n  }, [handleKeyDown]);\\n\\n  return null;\\n};\\n\\nexport default KeyListener;\\n\";","map":{"version":3,"sources":["/home/m6d/Documents/react-hooks/src/components/Code/EventListeners/KeyListener.js"],"names":[],"mappings":"AAAA","sourcesContent":["export default `import React, { useCallback, useEffect } from \"react\";\n\n// utilize useEffect with an event listener that calls a useCallback function.\nconst KeyListener = () => {\n  const handleKeyDown = useCallback(({ keyCode }) => {\n    if (keyCode === 13) alert(\"You pressed the enter key.\");\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  return null;\n};\n\nexport default KeyListener;\n`;\n"]},"metadata":{},"sourceType":"module"}