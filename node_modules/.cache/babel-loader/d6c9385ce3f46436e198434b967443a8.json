{"ast":null,"code":"import _regeneratorRuntime from \"/home/m6d/Documents/react-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/m6d/Documents/react-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/m6d/Documents/react-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/m6d/Documents/react-hooks/src/components/Body/ShowCode/index.js\";\nimport React, { useState, useLayoutEffect, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport copy from \"copy-to-clipboard\";\nimport { BlockContainer, CopyButton, SyntaxHighlighter } from \"../index\";\nvar styles = {\n  container: {\n    borderRadius: 0\n  }\n};\n\nvar ShowCode = function ShowCode(_ref) {\n  var fileName = _ref.fileName,\n      showCode = _ref.showCode;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      loadedFile = _useState2[0],\n      setLoadedFile = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      copied = _useState4[0],\n      setCopied = _useState4[1];\n\n  var handleClick = useCallback(function () {\n    setCopied(true);\n    copy(loadedFile, {\n      format: \"text/plain\"\n    });\n  }, [loadedFile]);\n  useEffect(function () {\n    if (!showCode) {\n      setCopied(false);\n    }\n  }, [showCode]);\n  useLayoutEffect(function () {\n    var setDummyCode =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _ref3, file;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return import(\n                /* webpackMode: \"lazy\" */\n                \"../../Code/\".concat(fileName));\n\n              case 3:\n                _ref3 = _context.sent;\n                file = _ref3.default;\n                setLoadedFile(file);\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                setLoadedFile(\"Error loading file:\\n \".concat(_context.t0.toString()));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      return function setDummyCode() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    setDummyCode();\n  }, [fileName]);\n  return showCode ? React.createElement(BlockContainer, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(SyntaxHighlighter, {\n    language: \"javascript\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, loadedFile), React.createElement(CopyButton, {\n    copied: copied,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })) : null;\n};\n\nShowCode.propTypes = {\n  fileName: PropTypes.string.isRequired,\n  showCode: PropTypes.bool.isRequired\n};\nexport default ShowCode;","map":{"version":3,"sources":["/home/m6d/Documents/react-hooks/src/components/Body/ShowCode/index.js"],"names":["React","useState","useLayoutEffect","useCallback","useEffect","PropTypes","copy","BlockContainer","CopyButton","SyntaxHighlighter","styles","container","borderRadius","ShowCode","fileName","showCode","loadedFile","setLoadedFile","copied","setCopied","handleClick","format","setDummyCode","file","default","toString","propTypes","string","isRequired","bool"],"mappings":";;;;AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,eAFF,EAGEC,WAHF,EAIEC,SAJF,QAKO,OALP;AAMA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,iBAArC,QAA8D,UAA9D;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,YAAY,EAAE;AADL;AADE,CAAf;;AAMA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACPd,QAAQ,CAAC,EAAD,CADD;AAAA;AAAA,MACpCe,UADoC;AAAA,MACxBC,aADwB;;AAAA,mBAEfhB,QAAQ,CAAC,KAAD,CAFO;AAAA;AAAA,MAEpCiB,MAFoC;AAAA,MAE5BC,SAF4B;;AAI3C,MAAMC,WAAW,GAAGjB,WAAW,CAAC,YAAM;AACpCgB,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAb,IAAAA,IAAI,CAACU,UAAD,EAAa;AACfK,MAAAA,MAAM,EAAE;AADO,KAAb,CAAJ;AAGD,GAL8B,EAK5B,CAACL,UAAD,CAL4B,CAA/B;AAOAZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACW,QAAL,EAAe;AACbI,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GAJQ,EAIN,CAACJ,QAAD,CAJM,CAAT;AAMAb,EAAAA,eAAe,CAAC,YAAM;AACpB,QAAMoB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAIP;AAAO;AAAP,qCAA+CR,QAA/C,EAJO;;AAAA;AAAA;AAGNS,gBAAAA,IAHM,SAGfC,OAHe;AAKjBP,gBAAAA,aAAa,CAACM,IAAD,CAAb;AALiB;AAAA;;AAAA;AAAA;AAAA;AAOjBN,gBAAAA,aAAa,iCAA0B,YAAEQ,QAAF,EAA1B,EAAb;;AAPiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAZH,YAAY;AAAA;AAAA;AAAA,OAAlB;;AAUAA,IAAAA,YAAY;AACb,GAZc,EAYZ,CAACR,QAAD,CAZY,CAAf;AAcA,SAAOC,QAAQ,GACb,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEL,MAAM,CAACC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CK,UAA1C,CADF,EAEE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEE,MAApB;AAA4B,IAAA,OAAO,EAAEE,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADa,GAKX,IALJ;AAMD,CArCD;;AAuCAP,QAAQ,CAACa,SAAT,GAAqB;AACnBZ,EAAAA,QAAQ,EAAET,SAAS,CAACsB,MAAV,CAAiBC,UADR;AAEnBb,EAAAA,QAAQ,EAAEV,SAAS,CAACwB,IAAV,CAAeD;AAFN,CAArB;AAKA,eAAef,QAAf","sourcesContent":["import React, {\n  useState,\n  useLayoutEffect,\n  useCallback,\n  useEffect\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport copy from \"copy-to-clipboard\";\nimport { BlockContainer, CopyButton, SyntaxHighlighter } from \"../index\";\n\nconst styles = {\n  container: {\n    borderRadius: 0\n  }\n};\n\nconst ShowCode = ({ fileName, showCode }) => {\n  const [loadedFile, setLoadedFile] = useState(\"\");\n  const [copied, setCopied] = useState(false);\n\n  const handleClick = useCallback(() => {\n    setCopied(true);\n    copy(loadedFile, {\n      format: \"text/plain\"\n    });\n  }, [loadedFile]);\n\n  useEffect(() => {\n    if (!showCode) {\n      setCopied(false);\n    }\n  }, [showCode]);\n\n  useLayoutEffect(() => {\n    const setDummyCode = async () => {\n      try {\n        const {\n          default: file\n        } = await import(/* webpackMode: \"lazy\" */ `../../Code/${fileName}`);\n        setLoadedFile(file);\n      } catch (e) {\n        setLoadedFile(`Error loading file:\\n ${e.toString()}`);\n      }\n    };\n    setDummyCode();\n  }, [fileName]);\n\n  return showCode ? (\n    <BlockContainer style={styles.container}>\n      <SyntaxHighlighter language=\"javascript\">{loadedFile}</SyntaxHighlighter>\n      <CopyButton copied={copied} onClick={handleClick} />\n    </BlockContainer>\n  ) : null;\n};\n\nShowCode.propTypes = {\n  fileName: PropTypes.string.isRequired,\n  showCode: PropTypes.bool.isRequired\n};\n\nexport default ShowCode;\n"]},"metadata":{},"sourceType":"module"}