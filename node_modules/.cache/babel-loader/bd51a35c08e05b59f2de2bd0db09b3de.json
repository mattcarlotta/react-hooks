{"ast":null,"code":"import _slicedToArray from \"/home/m6d/Documents/react-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/m6d/Documents/react-hooks/src/components/Examples/Misc/FetchData/index.js\";\nimport React, { useEffect } from \"react\";\nimport { FaRedoAlt } from \"react-icons/fa\";\nimport { BlockContainer, Button, Column, DataContainer, DisplayData, DataPlaceholder, Row, ShowCode, ShowCodeButton, SubTitle } from \"../../../Body\";\nimport { useFetchData, useToggle } from \"../../../Hooks\";\nvar styles = {\n  column1: {\n    padding: \"10px 0 0 0\"\n  },\n  column2: {\n    padding: \"10px 0\",\n    textAlign: \"center\"\n  },\n  form: {\n    padding: \"0\"\n  },\n  refresh: {\n    width: \"100%\"\n  },\n  row: {\n    padding: \"0 0 5px 0\"\n  },\n  showCodeButton: {\n    float: \"right\"\n  }\n};\n\nvar FetchDataExample = function FetchDataExample() {\n  var _useFetchData = useFetchData(),\n      data = _useFetchData.data,\n      fetchData = _useFetchData.fetchData,\n      refreshData = _useFetchData.refreshData;\n\n  var _useToggle = useToggle(false),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      showCode = _useToggle2[0],\n      toggleShowCode = _useToggle2[1];\n\n  useEffect(function () {\n    if (data.isLoading) {\n      fetchData();\n    }\n  }, [data.isLoading, fetchData]);\n  return React.createElement(React.Fragment, null, React.createElement(SubTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Fetching and Updating Data\"), React.createElement(BlockContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Column, {\n    width: \"75%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(BlockContainer, {\n    style: styles.column1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(BlockContainer, {\n    style: styles.column2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(DataContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, data.isLoading ? React.createElement(DataPlaceholder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }) : React.createElement(DisplayData, Object.assign({}, data, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })))), React.createElement(BlockContainer, {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: refreshData,\n    style: styles.refresh,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(FaRedoAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), \" Refresh Data\")))), React.createElement(Column, {\n    width: \"25%\",\n    align: \"flex-end\",\n    style: styles.column2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(ShowCodeButton, {\n    style: styles.showCodeButton,\n    showCode: showCode,\n    toggleShowCode: toggleShowCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })))), React.createElement(ShowCode, {\n    showCode: showCode,\n    fileName: \"Misc/FetchData.js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }));\n};\n\nexport default FetchDataExample;","map":{"version":3,"sources":["/home/m6d/Documents/react-hooks/src/components/Examples/Misc/FetchData/index.js"],"names":["React","useEffect","FaRedoAlt","BlockContainer","Button","Column","DataContainer","DisplayData","DataPlaceholder","Row","ShowCode","ShowCodeButton","SubTitle","useFetchData","useToggle","styles","column1","padding","column2","textAlign","form","refresh","width","row","showCodeButton","float","FetchDataExample","data","fetchData","refreshData","showCode","toggleShowCode","isLoading"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { FaRedoAlt } from \"react-icons/fa\";\nimport {\n  BlockContainer,\n  Button,\n  Column,\n  DataContainer,\n  DisplayData,\n  DataPlaceholder,\n  Row,\n  ShowCode,\n  ShowCodeButton,\n  SubTitle\n} from \"../../../Body\";\nimport { useFetchData, useToggle } from \"../../../Hooks\";\n\nconst styles = {\n  column1: {\n    padding: \"10px 0 0 0\"\n  },\n  column2: {\n    padding: \"10px 0\",\n    textAlign: \"center\"\n  },\n  form: {\n    padding: \"0\"\n  },\n  refresh: {\n    width: \"100%\"\n  },\n  row: {\n    padding: \"0 0 5px 0\"\n  },\n  showCodeButton: {\n    float: \"right\"\n  }\n};\n\nconst FetchDataExample = () => {\n  const { data, fetchData, refreshData } = useFetchData();\n  const [showCode, toggleShowCode] = useToggle(false);\n\n  useEffect(() => {\n    if (data.isLoading) {\n      fetchData();\n    }\n  }, [data.isLoading, fetchData]);\n\n  return (\n    <>\n      <SubTitle>Fetching and Updating Data</SubTitle>\n      <BlockContainer>\n        <Row>\n          <Column width=\"75%\">\n            <BlockContainer style={styles.column1}>\n              <BlockContainer style={styles.column2}>\n                <DataContainer>\n                  {data.isLoading ? (\n                    <DataPlaceholder />\n                  ) : (\n                    <DisplayData {...data} />\n                  )}\n                </DataContainer>\n              </BlockContainer>\n              <BlockContainer style={styles.row}>\n                <Button onClick={refreshData} style={styles.refresh}>\n                  <FaRedoAlt /> Refresh Data\n                </Button>\n              </BlockContainer>\n            </BlockContainer>\n          </Column>\n          <Column width=\"25%\" align=\"flex-end\" style={styles.column2}>\n            <ShowCodeButton\n              style={styles.showCodeButton}\n              showCode={showCode}\n              toggleShowCode={toggleShowCode}\n            />\n          </Column>\n        </Row>\n      </BlockContainer>\n      <ShowCode showCode={showCode} fileName=\"Misc/FetchData.js\" />\n    </>\n  );\n};\n\nexport default FetchDataExample;\n"]},"metadata":{},"sourceType":"module"}