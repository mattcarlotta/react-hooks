{"ast":null,"code":"var _jsxFileName = \"/home/m6d/Documents/react-hooks/src/containers/Message/index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { FaBell, FaExclamationTriangle, FaSkullCrossbones } from \"react-icons/fa\";\nimport { Transition } from \"react-transition-group\";\nimport { hideMessage, resetMessage } from \"../../actions/messageActions\";\nimport MessageContainer from \"./MessageContainer\";\nimport WindowContainer from \"./WindowContainer\";\nimport AlertContainer from \"./AlertContainer\";\nimport TextContainer from \"./TextContainer\";\nimport ButtonContainer from \"./ButtonContainer\";\nimport CloseButton from \"./CloseButton\";\n\nvar alertType = function alertType(type) {\n  switch (type) {\n    case \"alert\":\n      return React.createElement(FaBell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n\n    case \"warning\":\n      return React.createElement(FaExclamationTriangle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n\n    default:\n      return React.createElement(FaSkullCrossbones, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n  }\n};\n\nvar Message = function Message(_ref) {\n  var hideMessage = _ref.hideMessage,\n      message = _ref.message,\n      resetMessage = _ref.resetMessage,\n      show = _ref.show,\n      type = _ref.type;\n  return React.createElement(Transition, {\n    mountOnEnter: true,\n    unmountOnExit: true,\n    in: show,\n    timeout: 350,\n    onExited: resetMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, function (state) {\n    return React.createElement(WindowContainer, {\n      state: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(MessageContainer, {\n      type: type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(AlertContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, alertType(type)), React.createElement(TextContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, message), React.createElement(ButtonContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(CloseButton, {\n      handleClick: hideMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))));\n  });\n};\n\nMessage.propTypes = {\n  hideMessage: PropTypes.func.isRequired,\n  message: PropTypes.string,\n  resetMessage: PropTypes.func.isRequired,\n  show: PropTypes.bool,\n  type: PropTypes.string\n};\nexport default connect(function (_ref2) {\n  var messages = _ref2.messages;\n  return {\n    message: messages.message,\n    show: messages.show,\n    type: messages.type\n  };\n}, {\n  hideMessage: hideMessage,\n  resetMessage: resetMessage\n})(Message);","map":{"version":3,"sources":["/home/m6d/Documents/react-hooks/src/containers/Message/index.js"],"names":["React","PropTypes","connect","FaBell","FaExclamationTriangle","FaSkullCrossbones","Transition","hideMessage","resetMessage","MessageContainer","WindowContainer","AlertContainer","TextContainer","ButtonContainer","CloseButton","alertType","type","Message","message","show","state","propTypes","func","isRequired","string","bool","messages"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  FaBell,\n  FaExclamationTriangle,\n  FaSkullCrossbones\n} from \"react-icons/fa\";\nimport { Transition } from \"react-transition-group\";\nimport { hideMessage, resetMessage } from \"../../actions/messageActions\";\nimport MessageContainer from \"./MessageContainer\";\nimport WindowContainer from \"./WindowContainer\";\nimport AlertContainer from \"./AlertContainer\";\nimport TextContainer from \"./TextContainer\";\nimport ButtonContainer from \"./ButtonContainer\";\nimport CloseButton from \"./CloseButton\";\n\nconst alertType = type => {\n  switch (type) {\n    case \"alert\":\n      return <FaBell />;\n    case \"warning\":\n      return <FaExclamationTriangle />;\n    default:\n      return <FaSkullCrossbones />;\n  }\n};\n\nconst Message = ({ hideMessage, message, resetMessage, show, type }) => (\n  <Transition\n    mountOnEnter\n    unmountOnExit\n    in={show}\n    timeout={350}\n    onExited={resetMessage}\n  >\n    {state => (\n      <WindowContainer state={state}>\n        <MessageContainer type={type}>\n          <AlertContainer>{alertType(type)}</AlertContainer>\n          <TextContainer>{message}</TextContainer>\n          <ButtonContainer>\n            <CloseButton handleClick={hideMessage} />\n          </ButtonContainer>\n        </MessageContainer>\n      </WindowContainer>\n    )}\n  </Transition>\n);\n\nMessage.propTypes = {\n  hideMessage: PropTypes.func.isRequired,\n  message: PropTypes.string,\n  resetMessage: PropTypes.func.isRequired,\n  show: PropTypes.bool,\n  type: PropTypes.string\n};\n\nexport default connect(\n  ({ messages }) => ({\n    message: messages.message,\n    show: messages.show,\n    type: messages.type\n  }),\n  { hideMessage, resetMessage }\n)(Message);\n"]},"metadata":{},"sourceType":"module"}