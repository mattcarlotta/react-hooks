{"ast":null,"code":"import _slicedToArray from \"/home/m6d/Documents/react-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/m6d/Documents/react-hooks/src/components/Examples/Misc/DragNDrop/index.js\";\nimport React from \"react\";\nimport { BlockContainer, Button, Column, DragNDrop, Row, ShowCode, ShowCodeButton, SubTitle } from \"../../../Body\";\nimport { useDragDropHandler, useToggle } from \"../../../Hooks\";\nvar styles = {\n  containerStyle: {\n    padding: \"20px 20px 0 10px\",\n    background: \"#4c9aff\",\n    margin: \"10px\",\n    borderRadius: \"4px\"\n  },\n  column: {\n    padding: \"10px 0\"\n  },\n  reset: {\n    marginLeft: \"10px\",\n    marginBottom: \"10px\",\n    width: \"100%\"\n  },\n  showCodeButton: {\n    float: \"right\"\n  }\n};\nvar initialData = {\n  tasks: {\n    \"task-1\": {\n      id: \"task-1\",\n      description: \"Create an upload microservice.\"\n    },\n    \"task-2\": {\n      id: \"task-2\",\n      description: \"Add top-level notifications.\"\n    },\n    \"task-3\": {\n      id: \"task-3\",\n      description: \"Integrate Redux for authentication.\"\n    },\n    \"task-4\": {\n      id: \"task-4\",\n      description: \"Prioritize email support by ticketing.\"\n    },\n    \"task-5\": {\n      id: \"task-5\",\n      description: \"Ability to update account details.\"\n    },\n    \"task-6\": {\n      id: \"task-6\",\n      description: \"Create a messager service.\"\n    },\n    \"task-7\": {\n      id: \"task-7\",\n      description: \"Invite friends to events.\"\n    }\n  },\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: \"To Do\",\n      taskIds: [\"task-1\", \"task-2\", \"task-3\", \"task-4\"]\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: \"Completed\",\n      taskIds: [\"task-5\", \"task-6\", \"task-7\"]\n    }\n  }\n};\n\nvar DragNDropExample = function DragNDropExample() {\n  var _useDragDropHandler = useDragDropHandler(initialData),\n      values = _useDragDropHandler.values,\n      handleChange = _useDragDropHandler.handleChange,\n      resetValues = _useDragDropHandler.resetValues;\n\n  var _useToggle = useToggle(false),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      showCode = _useToggle2[0],\n      toggleShowCode = _useToggle2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(SubTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Drag and Drop\"), React.createElement(BlockContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Column, {\n    width: \"75%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(BlockContainer, {\n    style: styles.containerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(DragNDrop, {\n    columns: values.columns,\n    tasks: values.tasks,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: resetValues,\n    style: styles.reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Reset\")), React.createElement(Column, {\n    width: \"25%\",\n    align: \"flex-end\",\n    style: styles.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(ShowCodeButton, {\n    style: styles.showCodeButton,\n    showCode: showCode,\n    toggleShowCode: toggleShowCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })))), React.createElement(ShowCode, {\n    showCode: showCode,\n    fileName: \"Misc/DragNDrop.js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }));\n};\n\nexport default DragNDropExample;","map":{"version":3,"sources":["/home/m6d/Documents/react-hooks/src/components/Examples/Misc/DragNDrop/index.js"],"names":["React","BlockContainer","Button","Column","DragNDrop","Row","ShowCode","ShowCodeButton","SubTitle","useDragDropHandler","useToggle","styles","containerStyle","padding","background","margin","borderRadius","column","reset","marginLeft","marginBottom","width","showCodeButton","float","initialData","tasks","id","description","columns","title","taskIds","DragNDropExample","values","handleChange","resetValues","showCode","toggleShowCode"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  BlockContainer,\n  Button,\n  Column,\n  DragNDrop,\n  Row,\n  ShowCode,\n  ShowCodeButton,\n  SubTitle\n} from \"../../../Body\";\nimport { useDragDropHandler, useToggle } from \"../../../Hooks\";\n\nconst styles = {\n  containerStyle: {\n    padding: \"20px 20px 0 10px\",\n    background: \"#4c9aff\",\n    margin: \"10px\",\n    borderRadius: \"4px\"\n  },\n  column: {\n    padding: \"10px 0\"\n  },\n  reset: {\n    marginLeft: \"10px\",\n    marginBottom: \"10px\",\n    width: \"100%\"\n  },\n  showCodeButton: {\n    float: \"right\"\n  }\n};\n\nconst initialData = {\n  tasks: {\n    \"task-1\": {\n      id: \"task-1\",\n      description: \"Create an upload microservice.\"\n    },\n    \"task-2\": {\n      id: \"task-2\",\n      description: \"Add top-level notifications.\"\n    },\n    \"task-3\": {\n      id: \"task-3\",\n      description: \"Integrate Redux for authentication.\"\n    },\n    \"task-4\": {\n      id: \"task-4\",\n      description: \"Prioritize email support by ticketing.\"\n    },\n    \"task-5\": {\n      id: \"task-5\",\n      description: \"Ability to update account details.\"\n    },\n    \"task-6\": {\n      id: \"task-6\",\n      description: \"Create a messager service.\"\n    },\n    \"task-7\": {\n      id: \"task-7\",\n      description: \"Invite friends to events.\"\n    }\n  },\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: \"To Do\",\n      taskIds: [\"task-1\", \"task-2\", \"task-3\", \"task-4\"]\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: \"Completed\",\n      taskIds: [\"task-5\", \"task-6\", \"task-7\"]\n    }\n  }\n};\n\nconst DragNDropExample = () => {\n  const { values, handleChange, resetValues } = useDragDropHandler(initialData);\n\n  const [showCode, toggleShowCode] = useToggle(false);\n\n  return (\n    <>\n      <SubTitle>Drag and Drop</SubTitle>\n      <BlockContainer>\n        <Row>\n          <Column width=\"75%\">\n            <BlockContainer style={styles.containerStyle}>\n              <DragNDrop\n                columns={values.columns}\n                tasks={values.tasks}\n                handleChange={handleChange}\n              />\n            </BlockContainer>\n            <Button onClick={resetValues} style={styles.reset}>\n              Reset\n            </Button>\n          </Column>\n          <Column width=\"25%\" align=\"flex-end\" style={styles.column}>\n            <ShowCodeButton\n              style={styles.showCodeButton}\n              showCode={showCode}\n              toggleShowCode={toggleShowCode}\n            />\n          </Column>\n        </Row>\n      </BlockContainer>\n      <ShowCode showCode={showCode} fileName=\"Misc/DragNDrop.js\" />\n    </>\n  );\n};\n\nexport default DragNDropExample;\n"]},"metadata":{},"sourceType":"module"}