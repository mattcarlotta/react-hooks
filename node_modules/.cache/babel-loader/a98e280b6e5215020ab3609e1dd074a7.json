{"ast":null,"code":"import _defineProperty from \"/home/m6d/Documents/react-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/m6d/Documents/react-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/m6d/Documents/react-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar useFormHandler = function useFormHandler(initialState) {\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var handleChange = useCallback(function (_ref) {\n    var _ref$target = _ref.target,\n        name = _ref$target.name,\n        value = _ref$target.value;\n    return setValues(function (prevState) {\n      return _objectSpread({}, prevState, _defineProperty({}, name, value));\n    });\n  }, []);\n  var resetValue = useCallback(function () {\n    return setValues(initialState);\n  }, [initialState]);\n  return {\n    handleChange: handleChange,\n    resetValue: resetValue,\n    values: values\n  };\n};\n\nuseFormHandler.propTypes = {\n  initialState: PropTypes.any\n};\nexport default useFormHandler;","map":{"version":3,"sources":["/home/m6d/Documents/react-hooks/src/components/Hooks/useFormHandler/index.js"],"names":["useState","useCallback","PropTypes","useFormHandler","initialState","values","setValues","handleChange","target","name","value","prevState","resetValue","propTypes","any"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,YAAY,EAAI;AAAA,kBACTJ,QAAQ,CAACI,YAAD,CADC;AAAA;AAAA,MAC9BC,MAD8B;AAAA,MACtBC,SADsB;;AAErC,MAAMC,YAAY,GAAGN,WAAW,CAC9B;AAAA,2BAAGO,MAAH;AAAA,QAAaC,IAAb,eAAaA,IAAb;AAAA,QAAmBC,KAAnB,eAAmBA,KAAnB;AAAA,WACEJ,SAAS,CAAC,UAAAK,SAAS;AAAA,+BAAUA,SAAV,sBAAsBF,IAAtB,EAA6BC,KAA7B;AAAA,KAAV,CADX;AAAA,GAD8B,EAG9B,EAH8B,CAAhC;AAKA,MAAME,UAAU,GAAGX,WAAW,CAAC;AAAA,WAAMK,SAAS,CAACF,YAAD,CAAf;AAAA,GAAD,EAAgC,CAACA,YAAD,CAAhC,CAA9B;AAEA,SAAO;AACLG,IAAAA,YAAY,EAAZA,YADK;AAELK,IAAAA,UAAU,EAAVA,UAFK;AAGLP,IAAAA,MAAM,EAANA;AAHK,GAAP;AAKD,CAdD;;AAgBAF,cAAc,CAACU,SAAf,GAA2B;AACzBT,EAAAA,YAAY,EAAEF,SAAS,CAACY;AADC,CAA3B;AAIA,eAAeX,cAAf","sourcesContent":["import { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst useFormHandler = initialState => {\n  const [values, setValues] = useState(initialState);\n  const handleChange = useCallback(\n    ({ target: { name, value } }) =>\n      setValues(prevState => ({ ...prevState, [name]: value })),\n    []\n  );\n  const resetValue = useCallback(() => setValues(initialState), [initialState]);\n\n  return {\n    handleChange,\n    resetValue,\n    values\n  };\n};\n\nuseFormHandler.propTypes = {\n  initialState: PropTypes.any\n};\n\nexport default useFormHandler;\n"]},"metadata":{},"sourceType":"module"}